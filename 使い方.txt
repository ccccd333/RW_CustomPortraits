①ディレクトリ構成

...\Steam\steamapps\common\RimWorld
	CustomPortraits
		〇〇.png
	CustomPortraitsEx\
		〇〇\~\1.dds
		template\
			folder_list.txt
			フォルダー作成.py
		Preset\
			〇〇.json
		Setting.json
		ファイル集計.py

②必要なもの
１．CustomPortraits\〇〇.png

〇〇には好きな名前(ポーン名など)

２．CustomPortraitsEx\〇〇\~\1.dds
〇〇は（１．）の名前と一致させてください。
~（チルダ)の箇所は深すぎてもwindows上そんなに長いパスは設定できないので軽めに分類できるものでお願いします。

３．1.dds
これは1からインクリメントして、2.dds、3.ddsと作ってください。
1.dds以外必要な人はおそらく、アニメーション用で使われる方です。
一応pngもサポートしています。1.pngとしてください。
※ただし、pngでアニメーション用はサポートしてないです。サイズがでかすぎるためRAM、VRAMに優しくないので※
（ゲーム開始直後に読まれてＧＣにて解放されるため）

後、既知のバグと申し送り.txtに書いた通りddsは上下反転したものを使ってください。
アニメーション用のdds画像を作りたい方はgithub、同梱の「Cine2DDSTool」を使ってください。
使い方はCine2DDSTool\readme.txtをご確認ください。

４．template
名前が微妙ですが、フォルダを作成するためだけのもので、folder_list.txtにフォルダーの名前を入れて、python実行すれば
勝手に作ってくれるものです。利用方法としては（２．）用のディレクトリ作成用です。

５．Preset
〇〇は（１．）の名前と一致させてください。
jsonの記述は後述します。

６．Setting.json
現在はデフォルトの画像表示時刻のみの設定があるのみです。

７．ファイル集計.py
デバッグ用でも

③仕様について
動物、メカノイドには対応していません（心情ない？Nullになってしまう。原因がわかれば対応したいですが、今のところは除外）

アニメーションは
jsonのディスプレイ時間の間大体4フレームごとに画像を切り替えます。

ほかのModで心情を追加するものならその心情名を⑤の内容に書けば、それ用の画像が表示されます。
心情テーブルの取り方は以下の通りです。
(ゲーム内タイトル画面)→オプション→開発オプションにチェック→
タイトル画面上部に再生マークみたいなのがあるのでクリック→
出力タブ→(フィルターにThoughtsと入れる)→Thoughts選択→Copy CSV

これがあなた自身のMod環境にある心情です。日本語以外試してないですが、UTF16なので、
中国語でもなんでもいけるはず？後述しますが、Preset.jsonのref key、group、priority_weightは
CSVの心情名で記載してください。

CSVの心情はカンマ区切りなので正規表現でタブに変換すれば見やすくなると思います。sakura editorで
Ctrl+R
置換前「,」
置換後「\t」
正規表現のチェックを入れる。あとは、スプレッドシートに張り付けて、
stagesの箇所が心情名です。ただ[0]~となっているので、後述する、Preset jsonのgroupの箇所で正規表現で
ある程度くくったほうがいいです。使えない人はchat gptに聞くか、正規表現を頑張って覚えてください。
ただ、以下サンプルにもありますが、一般的な「.*」しか使わないでも結構くくれたので、これだけでも覚えていただければと思います。

簡単に説明します。
. = 任意一文字とマッチする
* = 直前の要素が 0回以上繰り返し にマッチ
なので.*とすると

「ひどい宿舎」「豪華な宿舎」をマッチさせたい場合は
「.*宿舎」とすれば「連続した任意の文字」＋「宿舎」とマッチするという意味になります。
上記のように書くとこのModで「「ひどい宿舎」「豪華な宿舎」の心情をキャッチすればいいんだな」と処理してくれます。

-----------補足-------------
1.mood=rimworldの心情
2.group=心情値を正規表現で一致したものをValueにあるものでまとめる
3.merged_keys=(1.)のkeyと(2.)のvalueの正規表現で一致したものが入る
4.priority_weights=これはKeyの上から順番に優先順位があるやつ、他との相関は(5.)で説明
5.matched_priority_weights=(3.)のKeyと(4.)のKeyの正規表現と一致したものを入れていく
6.TexTureコンテナ=(5.)のランダムな1つのキーとTexTureコンテナのキーの正規表現と一致するものを後続に渡す。
-----------補足-------------

④使い方（ゲーム中）
このMODはポーンの心情によって左下の画像(インスペクター)を表示切替するものです。
普通にReally Custom Portraitsと使い方は一緒で、ポーン選択後に健康タブ→虫眼鏡マーク→好きな画像のpng選択
をします。

後は、当Modがプログラム内でそのpng名から（５．）のPreset\〇〇.jsonと紐づけです。


なので〇〇は一致するようにお願いします。

⑤使い方（ゲーム外）
1.Gitに配置してあるリリース済みのdll2つをReally Custom PortraitsのAssembliesに上書きしてください。

2.Presetのjsonに以下を記載します(ver1.0)Presetのjson名は管理の観点からpreset_nameキーの値と一致させたほうがいいかもです。

{
  "preset_name": "ABCD",←これが〇〇のか所です。
  "mood": {
    "fallback_mood": "Idle",←これは後述のpriority_weightsで確率で選ばれなかった場合の画像表示です。何も紐づくref keyがない場合は
    							Really Custom Portraitsが持っている画像で表示します。
    "fallback_mood_on_death": "Dead",←これはポーンが死んだ場合のref keyです。
    "mood_refs": {←ここにテクスチャ設定等書いていきます。ここのキー名とpriority_weightsの確率で選択されたキー名が一致する場合、その画像を表示されます。
      "雨が降ってずぶぬれ": {←ref key これは正規表現を使えます。
      							これはpriority_weightsのキー名と一致するもの、もしくはpriority_weightsのキー名を正規表現でヒットさせることも可能です。
      							例)priority_weights=Key:雨が降ってずぶぬれ|Value:~ mood_refs=Key:雨.*ずぶぬれ|Value:~→この内容で画像表示
        "textures": {←ここは固定でtextures
          "animation_mode": 1,←このrefはアニメーションかどうか 1 = アニメーション画像、 0 = 1つだけ表示のみ
          "display_duration": 6.0,←画像、アニメーション画像の表示時間
          "files": [
            "ABCD/雨が降ってずぶぬれ/1.dds~79.dds"←アニメーション画像は~(チルダ)で範囲を定義してください。
          ]
        }
      },
      "不快感": {
        "textures": {
          "animation_mode": 1,
          "display_duration": 6.0,
          "files": [
            "ABCD/不快感/1.dds~79.dds"
          ]
        }
      },
      "Idle": {
        "textures": {
          "animation_mode": 1,
          "display_duration": 6.0,
          "files": [
            "ABCD/Idle/1.dds~79.dds"
          ]
        }
      },
      "Dead": {
        "textures": {
          "animation_mode": 1,
          "display_duration": 6.0,
          "files": [
            "ABCD/Dead/1.dds~79.dds"
          ]
        }
      }
    },
    "group": {←ここにグループ化を行います。というのも心情は種類が多すぎるので1対nで管理できるようにしたものです。
      "不快感": [←これは[]内のものをグループした時の名前です。ここにも正規表現は使えます。正規表現を使う場合は補足の関係性を考えて記載してください。
        "奴隷売買",←ここには心情名を記載していきます。正規表現が使用できます。
        ".*摘出した",
        "監禁された",
        ".*人肉を捌いた",
        "死体.*見た",
        "死んでゆく仲間を見た",
        ".*死ぬところを見た",
        ".*を見放した",
        ".*を見殺しにした",
        "絆で結ばれた.*を見捨てた",
        ".*の蘇生に失敗した"
      ],
      "雨が降ってずぶぬれ": [
        "ずぶ濡れ"
      ]
    },
    "priority_weights": {←優先順位と選択率の定義です。上から順に定義したものが先に評価され、weightの項目によって選択されます。
      "不快感": {←基本はgroupのキーに書かれたものと一致するものを記載します。正規表現も使用できます。その際は
      			心情名＋groupの内容でヒットするか見ます。なのでgroup化しなくてもいいものを記載することができます。
      			例)priority_weights=Key:.*を見た|Value=~とするとポーンの心情に「死んでゆく仲間を見た」「死体を見た」があればそれをピックアップ
      			更にgroupに「死を見た」があればそれをピックアップし、priority_weightsのValueのweightの確率で判定できます。
      			後続のref keyには「.*を見た」で渡されるのでref keyには".*を見た": {～"files": 
      			["ABCD/...を見た/1.dds~79.dds"]としてください。ちなみにファイルには.*といったものは含めないので例では...としています。
        "category": 0,←現在未使用
        "weight": 20←確率0~100までとします。マイナスや0だと選ばれないし、100以降も必ず選択されるので意味ないです。
      },
      "雨が降ってずぶぬれ": {
        "category": 0,
        "weight": 20
      }
    }
  }
}